[gd_resource type="ShaderMaterial" load_steps=14 format=2]

[sub_resource type="VisualShaderNodeScalarInterp" id=1]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeFresnel" id=2]
default_input_values = [ 2, false, 3, 12.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=3]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=4]
constant = Color( 0.719987, 0.714363, 0.714363, 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=5]

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "MainColor"

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "view"

[sub_resource type="VisualShaderNodeColorConstant" id=9]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=10]

[sub_resource type="VisualShaderNodeScalarConstant" id=11]

[sub_resource type="VisualShaderNodeScalarConstant" id=12]
constant = 1.0

[sub_resource type="VisualShader" id=13]
code = "shader_type spatial;
uniform vec4 MainColor : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = MainColor.rgb;
	float n_out2p1 = MainColor.a;

// Color:6
	vec3 n_out6p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out6p1 = 1.000000;

// Input:3
	vec3 n_out3p0 = NORMAL;

// Input:4
	vec3 n_out4p0 = VIEW;

// Fresnel:11
	bool n_in11p2 = false;
	float n_in11p3 = 12.00000;
	float n_out11p0 = n_in11p2 ? (pow(clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in11p3)) : (pow(1.0 - clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in11p3));

// VectorScalarMix:7
	vec3 n_out7p0 = mix(n_out2p0, n_out6p0, n_out11p0);

// Scalar:8
	float n_out8p0 = 0.000000;

// Scalar:9
	float n_out9p0 = 1.000000;

// ScalarMix:10
	float n_in10p2 = 1.00000;
	float n_out10p0 = mix(n_out8p0, n_out9p0, n_in10p2);

// Color:12
	vec3 n_out12p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out12p1 = 1.000000;

// Color:13
	vec3 n_out13p0 = vec3(0.719987, 0.714363, 0.714363);
	float n_out13p1 = 1.000000;

// VectorScalarMix:14
	vec3 n_out14p0 = mix(n_out12p0, n_out13p0, n_out11p0);

// Output:0
	ALBEDO = n_out7p0;
	ROUGHNESS = n_out10p0;
	EMISSION = n_out14p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -535, 237.683 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -180, 40 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( -640, 220 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -640, 300 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( -180, 160 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( 60, 160 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( 20, 280 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 20, 360 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 220, 320 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -300, 280 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 40, 460 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 20, 540 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 180, 460 )
nodes/fragment/connections = PoolIntArray( 7, 0, 0, 0, 8, 0, 10, 0, 9, 0, 10, 1, 10, 0, 0, 3, 3, 0, 11, 0, 4, 0, 11, 1, 11, 0, 7, 2, 6, 0, 7, 1, 2, 0, 7, 0, 12, 0, 14, 0, 14, 0, 0, 5, 13, 0, 14, 1, 11, 0, 14, 2 )

[resource]
shader = SubResource( 13 )
shader_param/MainColor = Color( 0.945098, 0.215686, 0.215686, 1 )
